@model X.PagedList.IPagedList<Standing_Order_Vat_App.Common.ViewModels.Users_VM>
@using System.Web.Mvc;
@using X.PagedList;

<div class="container ">
    <div class="buttons d-flex justify-content-between m-3 p-3 mb-0 pb-0">
        <div>
            <a asp-action="AddUser" class="btn btn-primary" style="margin-left: 617px;font-size: x-small;">AddUser</a>
        </div m-3 p-3>
        <div>
            <form asp-action="ManageUser" method="get">
                @Html.TextBox("search")
                <input type="submit" value="Search" class="btn-primary ms-0" style="height: 30px;" />
            </form>
        </div>
    </div>
    
    @if (!Model.Any())
    {
        <div class="">
            <div class="text-center alert alert-danger_inner">
                <p class="m-3">no record found!</p>
            </div>
        </div>
    }
    @if (Model.Any())
    {
        <div class="m-3 p-3 mt-0 pt-0" style="margin:0 auto;">
            <table id="example" class="table table-striped table-bordered dt-responsive nowrap tblsize" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Role</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.UserName</td>
                            <td>@item.RoleName</td>
                            <td><a  class="btn btn-primary btn-sm" asp-action="UpdateUser" asp-route-userid="@item.UserId">Edit</a>
                                <a  class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete?')" asp-action="DeleteUser" asp-route-userid="@item.UserId">Delete</a></td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                var search = ViewBag.search;
            }
            @Html.PagedListPager((X.PagedList.IPagedList)Model,page=>Url.Action("ManageUser","Account",new{page,search = search}),new X.PagedList.Web.Common.PagedListRenderOptions{PageClasses  = new string[] { "page-link" },LiElementClasses =  new string[] { "page-item" }})
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        $("#example").datatable();
    });
</script>